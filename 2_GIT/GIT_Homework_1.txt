GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.


JSON
 4. Создать внешний репозиторий c названием JSON.
	Идем в GitHub и создаём репо JSON

 5. Клонировать репозиторий JSON на локальный компьютер.
	git clone https://github.com/AlexPankov7/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
	Если нужно то переходим в папку - cd JSON
	cat > new.json  - если нужно сразу дабавить в файл информацию
	touch new.json  - но, лучше так

 7. Добавить файл под гит.
	git add new.json

 8. Закоммитить файл.
	git commit -m "file new.json"

	$ git commit -m "file new.json"
	[main 75d12a9] file new.json
 	1 file changed, 0 insertions(+), 0 deletions(-)
 	create mode 100644 new.json


 9. Отправить файл на внешний GitHub репозиторий.
	git push https://github.com/AlexPankov7/JSON.git

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
	cat > new.json
{
	"Name": "Aleksei",
	"Age": 37,
	"Pet": "No",
	"Salary": "777 Euro"
}

 11. Отправить изменения на внешний репозиторий.
	git add new.json
	git commit -m "about me"
	git push https://github.com/AlexPankov7/JSON.git

 12. Создать файл preferences.json
	touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
	cat > preferences.json
	{
		"favorite film": "Million Dollar Baby",
		"favorite series": "Game of Thrones",
		"favorite food": "seafood",
		"favorite time of year": "summer",
		"I would like to visit": "Finland"
	}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
		{
		"Stady skills": 
			[
			"GIT",
			"Postman",
			"SQL",
			"JS",
			"Testing" 
			]
		}
 15. Отправить сразу 2 файла на внешний репозиторий.
	git add preferences.json skills.json	или  git add .
	git commit -m "added 2 files"
	git push https://github.com/AlexPankov7/JSON.git

 16. На веб интерфейсе создать файл bug_report.json.
	-Заходим в GitHub
	-Идём в репозиторий JSON
	-Нажимаем кнопку Add new file
	-Создаём файл с именем bug_report.json
	
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	-Нажать кнопку Commit changes
	-Пишем название коммита first commit file bug_report.json
	
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
	{
		"ID": "777",
		"Summary": "A brief description of the problem that clearly indicates the 			    cause and type of the erroneous situation",
		"Project": "Web App",
		"Version": "1.77.0",
		"Priority": "High",
		"Severity": "Critical",
		"Author": "Aleksei Pankov",
		"Steps to Reproduce": [
					"1. Go to the web site https://www.my_little_site.fi"
					"2. Push the button 'LogIn' "
						],
		"Result": "Push button 'LogIn' does not redirect to the login page.",
		"Expected Result": "Push on the 'LogIn' button redirects to the login page."	
	}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Делаем коммит (пишем название коммита)

 20. Синхронизировать внешний и локальный репозиторий JSON
	git pull


XML
 21. Создать внешний репозиторий c названием XML.
	Идем в GitHub и создаём репо XML
	
 22. Клонировать репозиторий XML на локальный компьютер.
	git clone https://github.com/AlexPankov7/XML.git

 23. Внутри локального XML создать файл “new.xml”.
	cd XML
	touch new.xml
 24. Добавить файл под гит.
	git add new.xml

 25. Закоммитить файл.
	git commit -m "Firsh commit new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
	git push https://github.com/AlexPankov7/XML.git

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
<info>
	<title>My_Info</title>
	<body>
		<name>Aleksei</name>
		<age>37</age>
		<pets>Molly</pets>
		<salary>777</salary>
	</body>
</info>

 28. Отправить изменения на внешний репозиторий.
	git add new.xml
	git commit -m "my commit"
	git push https://github.com/AlexPankov7/XML.git

 29. Создать файл preferences.xml
	touch preferences.xml
	
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	cat > preferences.xml

	<?xml version="1.0"?>
<preferences>

  	<Film>Million Dollar Baby</Film>
  	<series>Game of Thrones</series>
  	<food>seafood</food>
  	<season>summer</season>
  	<country>Finland</country>
  
</preferences>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	cat > sklls.xml

	<?xml version="1.0"?>
<body>
   <text>
1.      HTML;
2.      CSS;
3.      Postman;
4.	GIT
   </text>
</body>

 32. Сделать коммит в одну строку.
	git add .
	git commit -am "Firsh commit in one line"

 33. Отправить сразу 2 файла на внешний репозиторий.
	git push https://github.com/AlexPankov7/XML.git

 34. На веб интерфейсе создать файл bug_report.xml.
	- На веб GitHub идем в репо XML
	- Нажимаем 'Add file'
	- Нажимаем Create new file
	- Называем файл bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	-Жмём кнопку 'Commit changes'
	
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	<?xml version="1.0"?>
	<Bug_report>
 		 <ID>777</ID>
  		<Summary>User cannot clear the form with "Clear" button</Summary>
  		<Steps_to_reproduce> 1.Go to the web site https://www.my_little_site.fi 2. Push 			the button 'LogIn'</Steps_to_reproduce>
  		<Author>Aleksei Pankov</Author>
	</Bug_report>
	
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Жмём 'Commit changes'

 38. Синхронизировать внешний и локальный репозиторий XML
	git pull

		remote: Enumerating objects: 7, done.
		remote: Counting objects: 100% (7/7), done.
		remote: Compressing objects: 100% (5/5), done.
		remote: Total 6 (delta 2), reused 0 (delta 0), pack-reused 0
		Unpacking objects: 100% (6/6), 1.45 KiB | 23.00 KiB/s, done.
		From https://github.com/AlexPankov7/XML
   		e9a1d45..fbbd22e  main       -> origin/main
		Updating 71fbf55..fbbd22e
		Fast-forward
 		bug_report.xml | 8 ++++++++
 		1 file changed, 8 insertions(+)
 		create mode 100644 bug_report.xml

